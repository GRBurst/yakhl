---
# Middleware: Strip given prefixes
{{- if (.Values.stripPrefixes) }}
apiVersion: traefik.containo.us/v1alpha1 # traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "{{ .Values.serviceName }}-prefixes"
  namespace: "{{ .Values.namespace }}"
spec:
  stripPrefix:
    forceSlash: false
    prefixes:
      {{- range $prefix := .Values.stripPrefixes }}
      - {{ $prefix | quote }}
      {{- end }}
{{- end }}
---
# Middleware: Add security headers
apiVersion: traefik.containo.us/v1alpha1 # traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "{{ .Values.serviceName }}-headers"
  namespace: "{{ .Values.namespace }}"
spec:
  headers:
    customFrameOptionsValue: "SAMEORIGIN"
    browserXssFilter: true
    stsIncludeSubdomains: true
    stsSeconds: 15552000
    stsPreload: true
    forceSTSHeader: true
    contentTypeNosniff: true
    customResponseHeaders:
      X-Robots-Tag: "noindex,nofollow,nosnippet,noarchive,notranslate,noimageindex"
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: "{{ .Values.serviceName }}-chain"
  namespace: "{{ .Values.namespace }}"
spec:
  chain:
    middlewares:
      {{- if (.Values.stripPrefixes) }}
      - name: "{{ .Values.serviceName }}-prefixes"
      {{- end }}
      - name: "{{ .Values.serviceName }}-headers"
---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{ .Values.serviceName }}-ingress"
  namespace: "{{ .Values.namespace }}"
  annotations: # <middleware-namespace>-<middleware-name>@kubernetescrd
    traefik.ingress.kubernetes.io/router.middlewares: "{{ .Values.namespace }}-{{ .Values.serviceName }}-chain@kubernetescrd{{- if (.Values.additionalIngressMiddlewares) }},{{- join "," .Values.additionalIngressMiddlewares }}{{- end}}"
    {{- range $annotation_key, $annotation  := (.Values.additionalIngressAnnotations) }}
    {{ $annotation_key }}: {{ $annotation.value }}
    {{- end }}
spec:
  tls:
    - hosts:
      {{- range $host := .Values.hosts }}
      - {{ $host }}
      {{- end }}
  rules:
    {{- range $host := .Values.hosts }}
    - host: {{ $host }}
      http:
        paths:
          {{- if $.Values.prefixes }}
          {{- range $prefix := $.Values.prefixes }}
          - path: "{{ $prefix }}"
            pathType: Prefix
            backend:
              service:
                name: {{ $.Values.serviceName }}
                port:
                  number: {{ $.Values.port | default 80 }}
          {{- end }}
          {{- else }}
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name: {{ $.Values.serviceName }}
                port:
                  number: {{ $.Values.port | default 80 }}
          {{- end }}
    {{- end }}
